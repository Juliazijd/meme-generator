{"ast":null,"code":"var _jsxFileName = \"/Users/JULIA/Desktop/Winc/react-meme-generator/meme-generator-app/src/MemeGenerator.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MemeGenerator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImage: \"http://i.imgflip.com/1bij.jpg\",\n      allMemeImgs: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(response => {\n      const {\n        memes\n      } = response.data;\n      this.setState({\n        allMemeImgs: memes\n      });\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const randomNumber = Math.floor(Math.random() * this.allMemeImgs.length);\n    const randomMemeImage = this.state.allMemeImgs[randomNumber].url;\n    this.setState({\n      randomImage: randomMemeImage\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"meme-form\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"topText\",\n          placeholder: \"top text\",\n          value: this.state.topText,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"bottomText\",\n          placeholder: \"bottom text\",\n          value: this.state.bottomText,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Change image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.state.randomImage,\n        alt: \"problem?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"top\",\n        children: this.state.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"bottom\",\n        children: this.state.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MemeGenerator;","map":{"version":3,"sources":["/Users/JULIA/Desktop/Winc/react-meme-generator/meme-generator-app/src/MemeGenerator.js"],"names":["React","Component","MemeGenerator","constructor","state","topText","bottomText","randomImage","allMemeImgs","handleChange","bind","handleSubmit","event","name","value","target","setState","componentDidMount","fetch","then","response","json","memes","data","preventDefault","randomNumber","Math","floor","random","length","randomMemeImage","url","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\n\nclass MemeGenerator extends Component {\n    constructor () {\n        super();\n        this.state = {\n            topText: \"\",\n            bottomText: \"\",\n            randomImage: \"http://i.imgflip.com/1bij.jpg\",\n            allMemeImgs: []\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        const {name, value} = event.target;\n        this.setState({\n            [name]: value\n        })\n    }\n    componentDidMount () {\n        fetch(\"https://api.imgflip.com/get_memes\")\n            .then(response => response.json())\n            .then(response => {\n                const {memes} = response.data\n                this.setState({ allMemeImgs: memes })\n            })\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n        const randomNumber = Math.floor(Math.random() * this.allMemeImgs.length);\n        const randomMemeImage = this.state.allMemeImgs[randomNumber].url;\n        this.setState({ randomImage: randomMemeImage })\n    }\n    render() {\n        return (\n            <div className=\"meme\">\n                <form className=\"meme-form\" onSubmit={this.handleSubmit} >\n                    <input \n                        type=\"text\" \n                        name=\"topText\" \n                        placeholder=\"top text\" \n                        value={this.state.topText} \n                        onChange={this.handleChange}\n                    />\n                    <input type=\"text\" \n                        name=\"bottomText\" \n                        placeholder=\"bottom text\" \n                        value={this.state.bottomText} \n                        onChange={this.handleChange}\n                    />\n                </form>\n                <button>Change image</button>\n                <img src={this.state.randomImage} alt=\"problem?\"></img>\n                <h1 className=\"top\">{this.state.topText}</h1>\n                <h1 className=\"bottom\">{this.state.bottomText}</h1>\n            </div>\n        )\n    }\n}\n\nexport default MemeGenerator;"]},"metadata":{},"sourceType":"module"}