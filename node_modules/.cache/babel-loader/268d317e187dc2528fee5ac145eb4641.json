{"ast":null,"code":"var _jsxFileName = \"/Users/JULIA/Desktop/Winc/react-meme-generator/meme-generator-app/src/MemeGenerator.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MemeGenerator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImage: \"http://i.imgflip.com/1bij.jpg\",\n      allMemeImgs: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(response => {\n      const {\n        memes\n      } = response.data;\n      this.setState({\n        allMemeImgs: memes\n      });\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.setState(prevState => {\n      console.log(prevState[Math.floor(Math.random() * prevState.length)]);\n      return {\n        allMemeImgs: prevState[Math.floor(Math.random() * prevState.length)]\n      };\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"topText\",\n        placeholder: \"top text\",\n        value: this.state.topText,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"bottomText\",\n        placeholder: \"bottom text\",\n        value: this.state.bottomText,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onSubmit: this.handleSubmit,\n        children: \"Change image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.state.allMemeImgs.url,\n        alt: \"problem?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"top\",\n        children: this.state.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"bottom\",\n        children: this.state.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MemeGenerator;","map":{"version":3,"sources":["/Users/JULIA/Desktop/Winc/react-meme-generator/meme-generator-app/src/MemeGenerator.js"],"names":["React","Component","MemeGenerator","constructor","state","topText","bottomText","randomImage","allMemeImgs","handleChange","bind","handleSubmit","event","name","value","target","setState","componentDidMount","fetch","then","response","json","memes","data","preventDefault","prevState","console","log","Math","floor","random","length","render","url"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\n\nclass MemeGenerator extends Component {\n    constructor () {\n        super();\n        this.state = {\n            topText: \"\",\n            bottomText: \"\",\n            randomImage: \"http://i.imgflip.com/1bij.jpg\",\n            allMemeImgs: []\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        const {name, value} = event.target;\n        this.setState({\n            [name]: value\n        })\n    }\n    componentDidMount () {\n        fetch(\"https://api.imgflip.com/get_memes\")\n            .then(response => response.json())\n            .then(response => {\n                const {memes} = response.data\n                this.setState({ allMemeImgs: memes })\n            })\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n        this.setState(prevState => {\n            console.log(prevState[Math.floor(Math.random() * prevState.length)])\n            return {\n                allMemeImgs: prevState[Math.floor(Math.random() * prevState.length)]\n            }\n        })\n    }\n    render() {\n        return (\n            <div className=\"meme\">\n                <input \n                    type=\"text\" \n                    name=\"topText\" \n                    placeholder=\"top text\" \n                    value={this.state.topText} \n                    onChange={this.handleChange}\n                />\n                <input type=\"text\" \n                    name=\"bottomText\" \n                    placeholder=\"bottom text\" \n                    value={this.state.bottomText} \n                    onChange={this.handleChange}\n                />\n                <button onSubmit={this.handleSubmit}>Change image</button>\n                <img src={this.state.allMemeImgs.url} alt=\"problem?\"></img>\n                <h1 className=\"top\">{this.state.topText}</h1>\n                <h1 className=\"bottom\">{this.state.bottomText}</h1>\n            </div>\n        )\n    }\n}\n\nexport default MemeGenerator;"]},"metadata":{},"sourceType":"module"}